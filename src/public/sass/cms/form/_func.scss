@use "../form/var" as *;

/* ==============================
 *
 *
 * form function
 * フォーム関数
 *
 *
 ============================== */
/* ------------------------------
 *
 * font
 * ベースのフォント指定を生成
 *
 ------------------------------ */
@mixin f-base($base-size: 1) {
  font-size: var(--fs-font);
  line-height: var(--fs-line-height);
  padding-inline: var(--fs-padding-inline);
  padding-block: var(--fs-padding-block);
  border: 1px solid var(--fc-border);
  border-radius: var(--fs-border-radius);
  text-decoration: none;
  display: inline-block;
  @if ($base-size == lg) {
    --fs-font: 18px;
    --fs-line-height: 2;
    --fs-text: calc(
      var(--fs-font) * var(--fs-line-height)
    ); //テキストの範囲サイズ
    --fs-input: calc(
      var(--fs-text) + var(--fs-padding-inline)
    ); //input要素のサイズ
    --fs-icon: var(--fs-font); //アイコン
    --fs-padding-inline: calc(var(--fs-font) / 2 + 2px);
    --fs-padding-inline-half: calc(var(--fs-padding-inline) / 2);
    --fs-padding-block: calc(var(--fs-font) / 4);
    --fs-border-radius: 6px; //角丸
    font-size: var(--fs-font);
    line-height: var(--fs-line-height);
    padding-inline: var(--fs-padding-inline);
    padding-block: var(--fs-padding-block);
    border: 1px solid var(--fc-border);
    border-radius: var(--fs-border-radius);
  }

  &::placeholder {
    color: var(--fc-placeholder);
  }
  &[readonly] {
    border-color: var(--fc-border-light);
    pointer-events: none;
  }
  &[disabled],
  &:disabled {
    background-color: var(--fc-disabled);
    pointer-events: none;
  }
  &:focus {
    outline-color: var(--fc-focus);
  }
}

/* ------------------------------
 *
 * valid / invalid
 * 有効 / 無効
 *
 ------------------------------ */
@mixin valid() {
  border-color: var(--fc-valid);
  background-color: var(--fc-valid-background);
}
@mixin invalid() {
  border-color: var(--fc-invalid) !important;
  background-color: var(--fc-invalid-bg) !important;
}

/* ------------------------------
 *
 * background icon
 * 背景のアイコン表示を生成
 *
 ------------------------------ */
// アイコン右側
@mixin fi-right(
  $formIcon,
  $formColor: #{$fc-icon},
  $secondFormIcon: null,
  $secondFormColor: #{$fc-icon}
) {
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none" width="24" height="24" viewBox="x,y" fill="#{$formColor}">#{$formIcon}</svg>');
  background-position: right var(--fs-padding-inline-half) top
    calc(var(--fs-padding-block) / 2 + 2px);
  background-repeat: no-repeat;
  background-size: var(--fs-text);
  padding-right: calc(var(--fs-text) * 1.25) !important;

  @if ($secondFormIcon !=null) {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none" width="24" height="24" viewBox="x,y" fill="#{$formColor}">#{$formIcon}</svg>'),
      url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none" width="24" height="24" viewBox="x,y" fill="#{$secondFormColor}">#{$secondFormIcon}</svg>');
    background-position: right
        calc(var(--fs-padding-inline) / 2)
        top
        calc(var(--fs-padding-block) / 2 + 2px),
      right
        calc(var(--fs-text) + (var(--fs-padding-inline) / 2))
        top
        calc(var(--fs-padding-block) / 2 + 2px);
    padding-right: calc(var(--fs-text) * 2.5) !important;
  }
}

// アイコン左側
@mixin fi-left(
  $formIcon,
  $formColor: #{$fc-icon},
  $secondFormIcon: null,
  $secondFormColor: #{$fc-icon}
) {
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none" width="24" height="24" viewBox="x,y" fill="#{$formColor}">#{$formIcon}</svg>');
  background-position: left var(--fs-padding-inline-half) top
    calc(var(--fs-padding-block) / 2 + 2px);
  background-repeat: no-repeat;
  background-size: var(--fs-text);
  padding-left: calc(var(--fs-text) * 1.25) !important;
}

// アイコン中央
@mixin fi-center(
  $formIcon,
  $formColor: #{$fc-icon},
  $secondFormIcon: null,
  $secondFormColor: #{$fc-icon}
) {
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none" width="24" height="24" viewBox="x,y" fill="#{$formColor}">#{$formIcon}</svg>');
  background-position: center center;
  background-repeat: no-repeat;
  background-size: var(--fs-text);
}

// アイコン単体
@mixin fi($formIcon, $formColor: #{$fc-icon}) {
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none" width="24" height="24" viewBox="x,y" fill="#{$formColor}">#{$formIcon}</svg>');
  background-position: center center;
  background-repeat: no-repeat;
  background-size: var(--fs-text);
}

/* ------------------------------
 *
 * svg color
 * SVG用のカラーに変換
 *
 ------------------------------ */
@function replaceSvgColor($subject) {
  $index: str-index($subject, "#");
  $subject: "%23" + str-slice($subject, 2);
  @return $subject;
}

/* ------------------------------
 *
 * focus
 * フォーカス時の指定を生成
 *
 ------------------------------ */
// radio / checkboxなど
@mixin focusLabel {
  &:focus + label {
    outline: 1px solid var(--fc-focus);
    background-color: var(--fc-focus-bg);
  }
}
